@page
@model DisasterAlleviationFoundation.Pages.Accounts.ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
}

<div class="container">

    <form class="form" id="resetPassword" method="post">

        <h1 class="form-text">Reset Password</h1>

        <div id="Details" class="Email">

            <input type="text" id="email" class="input" name="email" placeholder="">
            <label class="label" id="email">Email</label>
            <br />
            <span id="emailError" class="error-message"></span>

        </div>

        <div id="Details" class="Password">

            <input type="text" id="password" class="input" name="password" placeholder="">
            <label class="label" id="password">Password</label>
            <br />
            <span id="passwordError" class="error-message"></span>

        </div>

        <div id="Details" class="ConfirmPassword">

            <input type="text" id="con_password" class="input" name="con_password" placeholder="">
            <label class="label" id="con_password">Confirm Password</label>
            <br />
            <span id="confirmPasswordError" class="error-message"></span>

        </div>

        <p>@Model.message</p>
        <br />

        <button type="submit">Reset Password</button>

    </form>

    <script>

        document.addEventListener('DOMContentLoaded', function () {

            // Form submit event
            document.getElementById("resetPassword").addEventListener("submit", function (event) {

                // Prevent form submission if validation fails
                event.preventDefault();

                // Clear previous error messages
                clearErrorMessages();

                // Get form values
                let email = document.getElementById("email").value.trim();
                const password = document.getElementById("password").value.trim();
                const passwordError = validatePasswordComplexity(password);
                const confirmPassword = document.getElementById("con_password").value.trim();

                // Validation flags
                let isValid = true;

                // Email Validation
                if (email === "") {
                    isValid = false;
                    displayErrorMessage("emailError", "Email is required.");
                } else if (!validateEmail(email)) {
                    isValid = false;
                    displayErrorMessage("emailError", "Invalid email format.");
                }

                // Password Validation
                if (password === "") {
                    isValid = false;
                    displayErrorMessage("passwordError", "Password is required.");
                } else if (password.length < 8) {
                    isValid = false;
                    displayErrorMessage("passwordError", "Password must be at least 8 characters long.");
                } else if (passwordError) {
                    isValid = false;
                    displayErrorMessage("passwordError", passwordError);
                }

                // Confirm Password Validation
                if (confirmPassword === "") {
                    isValid = false;
                    displayErrorMessage("confirmPasswordError", "Confirm password is required.");
                } else if (password !== confirmPassword) {
                    isValid = false;
                    displayErrorMessage("confirmPasswordError", "Passwords do not match.");
                }

                // If the form is valid, proceed with submission (currently just logs success)
                if (isValid) {
                    document.getElementById("resetPassword").reset();
                    alert("Reset Password submitted successfully!");
                    // Optionally submit the form here: event.target.submit();
                }
            });

            // Helper Functions

            // Clears all error messages
            function clearErrorMessages() {
                document.getElementById("emailError").textContent = "";
                document.getElementById("passwordError").textContent = "";
                document.getElementById("confirmPasswordError").textContent = "";
            }

            // Display error message for the specified field
            function displayErrorMessage(elementId, message) {
                document.getElementById(elementId).textContent = message;
            }

            // Simple email validation
            function validateEmail(email) {
                const emailPattern = /^[a-zA-Z0-9._\-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/;
                return emailPattern.test(email);
            }

            // Simple password complexity check
            function validatePasswordComplexity(password) {
                const complexityPattern = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
                if (!complexityPattern.test(password)) {
                    return "Password must contain at least one uppercase letter, one lowercase letter, and one number.";
                }
                return ""; // No error if valid
            }

        });


    </script>


</div>
